diff -Naur openssl-0.9.8r-prod-patch/apps/speed.c openssl-0.9.8r/apps/speed.c
--- openssl-0.9.8r-prod-patch/apps/speed.c	2013-08-02 17:19:38.447301160 +0200
+++ openssl-0.9.8r/apps/speed.c	2013-08-02 18:14:26.628203345 +0200
@@ -870,6 +870,7 @@
 #ifndef OPENSSL_NO_ENGINE
 		else if	((argc > 0) && (strcmp(*argv,"-engine") == 0))
 			{
+				printf("%s:%d\n", __FUNCTION__, __LINE__);
 			argc--;
 			argv++;
 			if(argc == 0)
@@ -1303,6 +1304,8 @@
 		BIO_printf(bio_err,"program when this computer is idle.\n");
 		}
 
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 #ifndef OPENSSL_NO_RSA
 	for (i=0; i<RSA_NUM; i++)
 		{
@@ -1339,7 +1342,10 @@
 	DES_set_key_unchecked(&key2,&sch2);
 	DES_set_key_unchecked(&key3,&sch3);
 #endif
+
+	
 #ifndef OPENSSL_NO_AES
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
 	AES_set_encrypt_key(key16,128,&aes_ks1);
 	AES_set_encrypt_key(key24,192,&aes_ks2);
 	AES_set_encrypt_key(key32,256,&aes_ks3);
@@ -1806,6 +1812,8 @@
 		{
 		for (j=0; j<SIZE_NUM; j++)
 			{
+			 printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 			print_message(names[D_CBC_128_AES],c[D_CBC_128_AES][j],lengths[j]);
 			Time_F(START);
 			for (count=0,run=1; COND(c[D_CBC_128_AES][j]); count++)
@@ -2764,6 +2772,9 @@
 	int fd[2];
 	int *fds;
 	static char sep[]=":";
+	
+	 printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 
 	fds=malloc(multi*sizeof *fds);
 	for(n=0 ; n < multi ; ++n)
diff -Naur openssl-0.9.8r-prod-patch/apps/speed.c.rej openssl-0.9.8r/apps/speed.c.rej
--- openssl-0.9.8r-prod-patch/apps/speed.c.rej	1970-01-01 01:00:00.000000000 +0100
+++ openssl-0.9.8r/apps/speed.c.rej	2013-08-02 16:52:09.124350223 +0200
@@ -0,0 +1,12 @@
+--- apps/speed.c	2010-05-31 12:02:25.000000000 +0200
++++ apps/speed.c	2011-01-06 09:23:28.000000000 +0100
+@@ -114,7 +114,8 @@
+ # define TIMES
+ #endif
+ #if !defined(_UNICOS) && !defined(__OpenBSD__) && !defined(sgi) && !defined(__FreeBSD__) && !(defined(__bsdi) || defined(__bsdi__)) && !defined(_AIX) && !defined(OPENSSL_SYS_MPE) && !defined(__NetBSD__) && !defined(OPENSSL_SYS_VXWORKS) /* FIXME */
+-# define TIMEB
++//# define TIMEB
++# define TIMES
+ #endif
+ 
+ #if defined(OPENSSL_SYS_NETWARE)
diff -Naur openssl-0.9.8r-prod-patch/crypto/ecdh/ech_key.c openssl-0.9.8r/crypto/ecdh/ech_key.c
--- openssl-0.9.8r-prod-patch/crypto/ecdh/ech_key.c	2005-04-29 17:56:05.000000000 +0200
+++ openssl-0.9.8r/crypto/ecdh/ech_key.c	2013-08-02 17:37:16.033269699 +0200
@@ -76,6 +76,8 @@
 	EC_KEY *eckey,
 	void *(*KDF)(const void *in, size_t inlen, void *out, size_t *outlen))
 {
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 	ECDH_DATA *ecdh = ecdh_check(eckey);
 	if (ecdh == NULL)
 		return 0;
diff -Naur openssl-0.9.8r-prod-patch/crypto/engine/cavium_common.c openssl-0.9.8r/crypto/engine/cavium_common.c
--- openssl-0.9.8r-prod-patch/crypto/engine/cavium_common.c	2013-08-02 17:19:38.458301159 +0200
+++ openssl-0.9.8r/crypto/engine/cavium_common.c	2013-08-02 18:13:59.885204140 +0200
@@ -92,6 +92,7 @@
 	char   name[32];
 
 	strcpy(name, "/dev/pkp_dev");
+	printf("open /dev/pkp_dev \n");
 
 #ifdef CAVIUM_MULTICARD_API
     if(dev_id)
@@ -130,6 +131,8 @@
    Uint32 cond_code = 0;
    int dev_handle = -1;
 
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 #ifdef CAVIUM_MULTICARD_API
    dev_handle = gpkpdev_hdlr[dev_id]; 
 #else
@@ -154,6 +157,8 @@
       }
    }
 
+    printf("%s:%d cond_code=%d\n", __FUNCTION__, __LINE__, cond_code);
+
    return cond_code;
 }
 
@@ -191,6 +196,7 @@
 #endif
 
    global_dma_mode=CAVIUM_DIRECT; /*default mode */
+   printf("%s:%d\n", __FUNCTION__, __LINE__);
 
    return cond_code;
 }
@@ -237,6 +243,8 @@
    else
       ret_val = reqStatus.status;/*return status of request:'0' or 'EAGAIN'*/ 
 
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
    return ret_val;
 }
 
@@ -270,7 +278,8 @@
 #endif
 {
    Uint32 cond_code;
-   
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 #ifdef CAVIUM_MULTICARD_API
    cond_code = ioctl(gpkpdev_hdlr[dev_id], IOCTL_N1_FLUSH_ALL_CODE);
 #else
@@ -370,7 +379,9 @@
    buffer.group = CAVIUM_GP_GRP;
 
    buffer.incnt = 0;      
-   buffer.outcnt = 0;      
+   buffer.outcnt = 0;     
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 #ifdef CAVIUM_MULTICARD_API
    cond_code = ioctl(gpkpdev_hdlr[dev_id], IOCTL_N1_ALLOC_CONTEXT, (ptrlong)&cbuf);
 #else
@@ -491,6 +502,8 @@
    Uint32 ret_val;
    n1_write_key_buf key_buf;
    memset(&key_buf,0,sizeof(n1_write_key_buf));
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 
 #ifdef CAVIUM_MULTICARD_API
    ret_val=ioctl(gpkpdev_hdlr[dev_id],IOCTL_N1_ALLOC_KEYMEM,(ptrlong)&key_buf);
@@ -579,6 +592,7 @@
 {
     n1_write_key_buf key_buf;
     Uint32 ret_val;
+   printf("%s:%d\n", __FUNCTION__, __LINE__);
 
    memset(&key_buf,0,sizeof(n1_write_key_buf));
 #ifdef MC2
@@ -1347,6 +1361,8 @@
     cond_code = 
        ioctl(CSP1_driver_handle, IOCTL_N1_OPERATION_CODE, (ptrlong)&buffer);
 
+    printf("%s:%d  code=%d\n", __FUNCTION__, __LINE__, cond_code);
+
    if(cond_code)
      ret_val = cond_code; /*return error val*/
    else
@@ -1524,6 +1540,8 @@
    cond_code = ioctl(CSP1_driver_handle, IOCTL_N1_GET_RANDOM_CODE, (ptrlong)&buffer);
 #endif
 
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
    *request_id = buffer.request_id;
    ret_val=cond_code;
 
@@ -1645,6 +1663,8 @@
       ioctl(CSP1_driver_handle, IOCTL_N1_OPERATION_CODE, (ptrlong)&buffer);
 #endif
 
+    printf("%s:%d cond_code=%d\n", __FUNCTION__, __LINE__, cond_code);
+
    *request_id = buffer.request_id;
    if(cond_code)
      ret_val = cond_code; /*return error val*/
@@ -1853,10 +1873,14 @@
 #endif 
            ) 
 {
+ printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 #ifdef MC2
    return    ERR_OPERATION_NOT_SUPPORTED;
 #else
 
+    printf("%s:%d\n", __FUNCTION__, __LINE__);
+
    Csp1OperationBuffer buffer;
    Uint32 cond_code;
    Uint32 ret_val;
diff -Naur openssl-0.9.8r-prod-patch/crypto/engine/eng_all.c openssl-0.9.8r/crypto/engine/eng_all.c
--- openssl-0.9.8r-prod-patch/crypto/engine/eng_all.c	2013-08-02 17:19:38.468301159 +0200
+++ openssl-0.9.8r/crypto/engine/eng_all.c	2013-08-02 17:15:53.959307838 +0200
@@ -61,6 +61,7 @@
 
 void ENGINE_load_builtin_engines(void)
 	{
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
 	/* There's no longer any need for an "openssl" ENGINE unless, one day,
 	 * it is the *only* way for standard builtin implementations to be be
 	 * accessed (ie. it would be possible to statically link binaries with
diff -Naur openssl-0.9.8r-prod-patch/crypto/engine/hw_cavium.c openssl-0.9.8r/crypto/engine/hw_cavium.c
--- openssl-0.9.8r-prod-patch/crypto/engine/hw_cavium.c	2013-08-02 17:19:38.469301159 +0200
+++ openssl-0.9.8r/crypto/engine/hw_cavium.c	2013-08-02 18:10:01.772211224 +0200
@@ -1280,6 +1280,8 @@
 	const RSA_METHOD *meth1;
 	const DSA_METHOD  *meth3;
 	const DH_METHOD   *meth4;
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
+
 	if(!ENGINE_set_id(e,cavium_engine_id) ||
 		!ENGINE_set_name(e,cavium_engine_name) ||
 #ifndef OPENSSL_NO_RSA
@@ -1354,6 +1356,7 @@
 
 ENGINE *engine_cavium(void)
 {
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
 	ENGINE *ret = ENGINE_new();
 	if(!ret)
 		return NULL;
@@ -1365,6 +1368,7 @@
 }
 void ENGINE_load_cavium()
 {
+	printf("%s:%d\n", __FUNCTION__, __LINE__);
 	ENGINE *to_add = engine_cavium();
 	if(!to_add)
 		return;
diff -Naur openssl-0.9.8r-prod-patch/openssl-0.9.8r.kdev4 openssl-0.9.8r/openssl-0.9.8r.kdev4
--- openssl-0.9.8r-prod-patch/openssl-0.9.8r.kdev4	1970-01-01 01:00:00.000000000 +0100
+++ openssl-0.9.8r/openssl-0.9.8r.kdev4	2013-08-02 16:53:11.317348373 +0200
@@ -0,0 +1,3 @@
+[Project]
+Manager=KDevCustomMakeManager
+Name=openssl-0.9.8r
